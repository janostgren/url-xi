{
    "testName": "Ticketmonster Get Event",
    "variables": [
        {
            "key": "eventId",
            "type": "number",
            "usage": "inResponse",
            "value": "'let arr=[1,2];arr[Math.floor(Math.random() * arr.length)]'",
            "description":" The event id"
        },
        {
            "key": "defIdleTime",
            "type": "number",
            "usage": "input",
            "value": 500,
            "validation": "value > 499 && value <= 15000"
        },
        {
            "key": "requestIdleTime",
            "type": "number",
            "usage": "input",
            "value": 500,
            "validation": "value > 499 && value <= 15000"
        },
        {
            "key": "sections",
            "type": "number",
            "usage": "inResponse",
            "value": 0
        },
        {
            "key": "capacity",
            "type": "number",
            "usage": "returnValue",
            "value": 0,
            "unit": "seats"
        },
        {
            "key": "venueName",
            "type": "string",
            "usage": "inResponse",
            "value": ""
        }
    ],
    "baseURL": "http://ticketmonster.apicasystem.com",
    "config": {},
    "idleBetweenRequests": "{{defIdleTime}}",
    "steps": [
        {
            "stepName": "Get Events",
            "idleBetweenRequests": "{{requestIdleTime}}",
            "scripts": [
                {
                    "scope":"before",
                    "script":"uxs.setVar('var1', new Date())"

                },
                {
                    "scope":"beforeEach",
                    "script":["let var1=uxs.getVar('var1')","console.info('var1',var1)"]

                }

            ],
            "requests": [
                {
                    "config": {
                        "method": "get",
                        "url": "/ticket-monster/rest/events",
                        "params": {
                            "_": "{{$timestamp}}"
                        }
                    },
                    "extractors": [
                       
                        {
                            "type": "header",
                            "expression": "x-powered-by",
                            "variable": "xPoweredBy"
                        }
                    ],
                    "scripts": [
                        
                        {
                            "scope":"after",
                            "script":[
                                "var jsonData = responseData;",
                                "var randomIdx = parseInt(Math.floor(Math.random() * jsonData.length));",
                                "// console.info('randomIdx',randomIdx, jsonData.length)",
                                "uxs.setVar('eventId', jsonData[randomIdx].id)"
                            ]
        
                        }
        
                    ]
                }
            ]
        },
        {
            "stepName": "Get Shows",
            "requests": [
                {
                    "config": {
                        "method": "get",
                        "url": "/ticket-monster/rest/shows",
                        "params": {
                            "_": "{{$timestamp}}",
                            "event": "{{eventId}}"
                        }
                    },
                    "extractors": [
                        {
                            "type": "jsonpath",
                            "expression": "$..venue.name",
                            "variable": "venueName"
                        },
                        {
                            "type": "jsonpath",
                            "expression": "$..venue.capacity",
                            "variable": "capacity"
                        },
                        {
                            "type": "jsonpath",
                            "expression": "$..venue.sections[*].id",
                            "variable": "sections",
                            "counter": true
                        }
                    ]
                }
            ]
        }
    ]
}